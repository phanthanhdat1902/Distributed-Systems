-- MySQL Script generated by MySQL Workbench
-- Thu Dec 10 18:07:06 2020
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

DROP TABLE IF EXISTS `booking_db`.`service_type_of_rooms` ;

CREATE TABLE IF NOT EXISTS `booking_db`.`service_type_of_rooms` (
  `id_type_of_room` INT NOT NULL,
  `id_service` INT NOT NULL,
  `price_per_night` CHAR(40) NULL DEFAULT NULL,
  PRIMARY KEY (`id_type_of_room`, `id_service`),
  INDEX `ID_Service_idx` (`id_service` ASC)  ,
  CONSTRAINT `package_is_of_service`
    FOREIGN KEY (`id_service`)
    REFERENCES `booking_db`.`service_hotels` (`id_service`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `package_is_of_type_of_room`
    FOREIGN KEY (`id_type_of_room`)
    REFERENCES `booking_db`.`type_of_rooms` (`id_type_of_room`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;
-- -----------------------------------------------------
-- Table `booking_db`.`hotels`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `booking_db`.`hotels` ;

CREATE TABLE IF NOT EXISTS `booking_db`.`hotels` (
  `id_hotel` INT NOT NULL AUTO_INCREMENT,
  `id_location` INT NOT NULL,
  `id_area` INT NOT NULL,
  `id_utility` INT NOT NULL,
  `id_theme` INT NULL,
  `id_type_of_hotel` INT NOT NULL,
  `title` VARCHAR(255) NULL DEFAULT NULL,
  `description` VARCHAR(255) NULL DEFAULT NULL,
  `term_checkin` VARCHAR(255) NULL DEFAULT NULL,
  `term_checkout` VARCHAR(255) NULL DEFAULT NULL,
  `term_transportation` LONGTEXT NULL DEFAULT NULL,
  `term_receiving_room` LONGTEXT NULL DEFAULT NULL,
  `term_entertainment` LONGTEXT NULL DEFAULT NULL,
  `term_surcharge` LONGTEXT NULL DEFAULT NULL,
  `term_note` LONGTEXT NULL DEFAULT NULL,
  `image_1` VARCHAR(255) NULL DEFAULT NULL,
  `image_2` VARCHAR(255) NULL DEFAULT NULL,
  `image_3` VARCHAR(255) NULL DEFAULT NULL,
  `image_4` VARCHAR(255) NULL DEFAULT NULL,
  `image_5` VARCHAR(255) NULL DEFAULT NULL,
  `video_linked` VARCHAR(255) NULL DEFAULT NULL,
  `score` FLOAT NULL DEFAULT NULL,
  `number_of_reviews` INT NULL DEFAULT NULL,
  `id_type_of_room_of_lowest_price` INT NULL,
  `id_service_of_lowest_price` INT NULL,
  PRIMARY KEY (`id_hotel`),
  INDEX `ID_Location_idx` (`id_location` ASC)  ,
  INDEX `ID_Area_idx` (`id_area` ASC)  ,
  INDEX `Utility--Hotel_idx` (`id_utility` ASC)  ,
  INDEX `hotel_has_lowest_idx` (`id_type_of_room_of_lowest_price` ASC, `id_service_of_lowest_price` ASC)  ,
  INDEX `hotel_has_theme_idx` (`id_theme` ASC)  ,
  INDEX `hotel_is_of_type_idx` (`id_type_of_hotel` ASC)  ,
  CONSTRAINT `hotel_is_at_location`
    FOREIGN KEY (`id_location`)
    REFERENCES `booking_db`.`locations` (`id_location`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `hotel_is_at_area`
    FOREIGN KEY (`id_area`)
    REFERENCES `booking_db`.`areas` (`id_area`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `hotel_has_utilities`
    FOREIGN KEY (`id_utility`)
    REFERENCES `booking_db`.`utilities` (`id_utility`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `hotel_has_lowest_price_of_id`
    FOREIGN KEY (`id_type_of_room_of_lowest_price` , `id_service_of_lowest_price`)
    REFERENCES `booking_db`.`service_type_of_rooms` (`id_type_of_room` , `id_service`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `hotel_has_theme`
    FOREIGN KEY (`id_theme`)
    REFERENCES `booking_db`.`themes` (`id_theme`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `hotel_is_of_type`
    FOREIGN KEY (`id_type_of_hotel`)
    REFERENCES `booking_db`.`type_of_hotels` (`id_type_of_hotel`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `booking_db`.`type_of_rooms`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `booking_db`.`type_of_rooms` ;

CREATE TABLE IF NOT EXISTS `booking_db`.`type_of_rooms` (
  `id_type_of_room` INT NOT NULL,
  `id_hotel` INT NOT NULL,
  `name` VARCHAR(255) NULL DEFAULT NULL,
  `id_type_of_view` INT NULL DEFAULT NULL,
  `adult_capacity` INT NULL DEFAULT NULL,
  `children_capacity` INT NULL DEFAULT NULL,
  `area` INT NULL DEFAULT NULL,
  `type_of_bed` VARCHAR(255) NULL DEFAULT NULL,
  `type_of_toilet` VARCHAR(255) NULL DEFAULT NULL,
  `image` VARCHAR(255) NULL DEFAULT NULL,
  PRIMARY KEY (`id_type_of_room`),
  INDEX `ID_Hotel_idx` (`id_hotel` ASC)  ,
  INDEX `type_of_room_has_type_of_view_idx` (`id_type_of_view` ASC)  ,
  CONSTRAINT `type_of_room_is_of_hotel`
    FOREIGN KEY (`id_hotel`)
    REFERENCES `booking_db`.`hotels` (`id_hotel`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `type_of_room_has_type_of_view`
    FOREIGN KEY (`id_type_of_view`)
    REFERENCES `booking_db`.`type_of_views` (`id_type_of_view`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `booking_db`.`combos`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `booking_db`.`combos` ;

CREATE TABLE IF NOT EXISTS `booking_db`.`combos` (
  `id_combo` INT NOT NULL AUTO_INCREMENT,
  `id_hotel` INT NOT NULL,
  `id_type_of_room` INT NOT NULL,
  `id_service` INT NOT NULL,
  `discount` INT NULL DEFAULT NULL,
  `start_date` DATE NULL DEFAULT NULL,
  `end_date` DATE NULL DEFAULT NULL,
  `minimum_number_of_rooms` INT NULL DEFAULT NULL,
  PRIMARY KEY (`id_combo`),
  INDEX `ID_Hotel_idx` (`id_hotel` ASC)  ,
  INDEX `ID_Service_idx` (`id_service` ASC)  ,
  INDEX `ID_Type_Of_Room_idx` (`id_type_of_room` ASC)  ,
  CONSTRAINT `combo_is_of_hotel`
    FOREIGN KEY (`id_hotel`)
    REFERENCES `booking_db`.`hotels` (`id_hotel`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `combo_is_for_service`
    FOREIGN KEY (`id_service`)
    REFERENCES `booking_db`.`service_type_of_rooms` (`id_service`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `combo_is_for_type_of_room`
    FOREIGN KEY (`id_type_of_room`)
    REFERENCES `booking_db`.`service_type_of_rooms` (`id_type_of_room`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `booking_db`.`rooms`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `booking_db`.`rooms` ;

CREATE TABLE IF NOT EXISTS `booking_db`.`rooms` (
  `id_room` INT NOT NULL AUTO_INCREMENT,
  `id_type_of_room` INT NOT NULL,
  `id_hotel` INT NOT NULL,
  `checkin_date` DATE NULL DEFAULT NULL,
  `checkout_date` DATE NULL DEFAULT NULL,
  `note` LONGTEXT NULL DEFAULT NULL,
  PRIMARY KEY (`id_room`),
  INDEX `ID_Hotel_idx` (`id_hotel` ASC)  ,
  INDEX `ID_Type_Of_Room_idx` (`id_type_of_room` ASC)  ,
  CONSTRAINT `room_is_of_hotel`
    FOREIGN KEY (`id_hotel`)
    REFERENCES `booking_db`.`hotels` (`id_hotel`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `room_has_type_of_room`
    FOREIGN KEY (`id_type_of_room`)
    REFERENCES `booking_db`.`type_of_rooms` (`id_type_of_room`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `booking_db`.`users`


-- -----------------------------------------------------
-- Table `booking_db`.`review_hotels`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `booking_db`.`review_hotels` ;

CREATE TABLE IF NOT EXISTS `booking_db`.`review_hotels` (
  `id_user` INT NOT NULL,
  `id_hotel` INT NOT NULL,
  `score` INT NULL DEFAULT NULL,
  `content` LONGTEXT NULL DEFAULT NULL,
  `create_time` TIMESTAMP NULL DEFAULT NULL,
  INDEX `ID_User_idx` (`id_user` ASC)  ,
  INDEX `ID_Hotel_idx` (`id_hotel` ASC)  ,
  PRIMARY KEY (`id_user`, `id_hotel`),
  CONSTRAINT `review_is_by_user`
    FOREIGN KEY (`id_user`)
    REFERENCES `booking_db`.`users` (`id_user`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `review_is_for_hotel`
    FOREIGN KEY (`id_hotel`)
    REFERENCES `booking_db`.`hotels` (`id_hotel`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;



-- -----------------------------------------------------
-- Table `booking_db`.`type_of_payments`
-- -----------------------------------------------------


-- -----------------------------------------------------
-- Table `booking_db`.`order_hotels`
-- -----------------------------------------------------
DROP TABLE IF EXISTS `booking_db`.`order_hotels` ;

CREATE TABLE IF NOT EXISTS `booking_db`.`order_hotels` (
  `id_order` INT NOT NULL,
  `id_user` INT NOT NULL,
  `id_type_of_room` INT NOT NULL,
  `id_service` INT NOT NULL,
  `id_type_of_payment` INT NOT NULL,
  `id_hotel` INT NOT NULL,
  `price` CHAR(40) NULL DEFAULT NULL,
  `name` VARCHAR(255) NULL DEFAULT NULL,
  `phone_number` VARCHAR(255) NULL DEFAULT NULL,
  `email` VARCHAR(255) NULL DEFAULT NULL,
  `note` LONGTEXT NULL DEFAULT NULL,
  `number_of_adult` INT NULL DEFAULT NULL,
  `number_of_chidren` INT NULL DEFAULT NULL,
  `start_date` DATE NULL DEFAULT NULL,
  `end_date` DATE NULL DEFAULT NULL,
  `status` INT NULL,
  PRIMARY KEY (`id_order`),
  INDEX `order_is_of_user_idx` (`id_user` ASC)  ,
  INDEX `order_is_of_hotel_idx` (`id_hotel` ASC)  ,
  INDEX `order_is_of_type_of_rooom_idx` (`id_type_of_room` ASC)  ,
  INDEX `order_is_of_service_idx` (`id_service` ASC)  ,
  INDEX `order_has_type_of_payment_idx` (`id_type_of_payment` ASC)  ,
  CONSTRAINT `hotel_order_is_of_user`
    FOREIGN KEY (`id_user`)
    REFERENCES `booking_db`.`users` (`id_user`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `order_is_of_hotel`
    FOREIGN KEY (`id_hotel`)
    REFERENCES `booking_db`.`hotels` (`id_hotel`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `order_is_of_type_of_rooom`
    FOREIGN KEY (`id_type_of_room`)
    REFERENCES `booking_db`.`service_type_of_rooms` (`id_type_of_room`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `order_is_of_service`
    FOREIGN KEY (`id_service`)
    REFERENCES `booking_db`.`service_type_of_rooms` (`id_service`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `hotel_order_has_type_of_payment`
    FOREIGN KEY (`id_type_of_payment`)
    REFERENCES `booking_db`.`type_of_payments` (`id_type_of_payment`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;

USE `booking_db`;

DELIMITER $$

USE `booking_db`$$
DROP TRIGGER IF EXISTS `booking_db`.`review_hotel_AFTER_INSERT` $$
USE `booking_db`$$
CREATE DEFINER = CURRENT_USER TRIGGER `booking_db`.`review_hotel_AFTER_INSERT` AFTER INSERT ON `review_hotel` FOR EACH ROW
BEGIN
	update hotel
    set hotel.score = (hotel.score*hotel.number_of_reviews +
		(select score
        from .id_hotel)) / (hotel.number_of_reviews+1)
	where hotel.id_hotel = new.id_hotel;
    
    update hotel
    set hotel.number_of_reviews = hotel.number_of_reviews + 1
    where hotel.id_hotel = new.id_hotel;
END$$


USE `booking_db`$$
DROP TRIGGER IF EXISTS `booking_db`.`review_hotel_BEFORE_DELETE` $$
USE `booking_db`$$
CREATE DEFINER = CURRENT_USER TRIGGER `booking_db`.`review_hotel_BEFORE_DELETE` BEFORE DELETE ON `review_hotel` FOR EACH ROW
BEGIN
	update hotel
    set hotel.score = (hotel.score*hotel.number_of_reviews +
		(select score
        from new.id_hotel)) / (hotel.number_of_reviews+1)
	where hotel.id_hotel = new.id_hotel;
    
    update hotel
    set hotel.number_of_reviews = hotel.number_of_reviews + 1
    where hotel.id_hotel = new.id_hotel;
END$$


DELIMITER ;

SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
